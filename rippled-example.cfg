#
# Sample rippled.cfg
#
# This file contains configuration information for rippled.
#
# This file should be named rippled.cfg.  This file is UTF-8 with Dos, UNIX,
# or Mac style end of lines.  Blank lines and lines beginning with '#' are
# ignored.  Undefined sections are reserved.  No escapes are currently defined.
#
# When you launch rippled, it will attempt to find this file.  For details,
# refer to the manual page for --conf command line option.
#
# [debug_logfile]
#   Specifies were a debug logfile is kept. By default, no debug log is kept
#
#   Example: debug.log
#
# [validators_site]:
#   Specifies where to find validators.txt for UNL boostrapping and RPC command unl_network.
#
#   Example: ripple.com
#
# [validators_file]:
#   Specifies how to bootstrap the UNL list.  The UNL list is based on a
#   validators.txt file and is maintained in the databases.  When rippled
#   starts up, if the databases are missing or are obsolete due to an upgrade
#   of rippled, rippled will reconstruct the UNL list as specified here.
#
#   If this entry is not present or empty, rippled will look for a validators.txt in the
#   config directory.  If not found there, it will attempt to retrieve the file
#   from the Ripple foundation's web site.
#
#   This entry is also used by the RPC command unl_load.
#
#   Specify the file by specifying its full path.
#
#   Examples:
#    C:/home/johndoe/ripple/validators.txt
#    /home/johndoe/ripple/validators.txt
#
# [validators]:
#   Only valid in "rippled.cfg", "ripple.txt", and the referered [validators_url].
#   List of nodes to accept as validators speficied by public key or domain.
#
#   For domains, rippled will probe for https web servers at the specied
#   domain in the following order: ripple.DOMAIN, www.DOMAIN, DOMAIN
#
#   Examples:
#    ripple.com
#    n9KorY8QtTdRx7TVDpwnG9NvyxsDwHUKUEeDLY3AkiGncVaSXZi5
#    n9MqiExBcoG19UXwoLjBJnhsxEhAZMuWwJDRdkyDz1EkEkwzQTNt John Doe
#
# [ips]:
#   Only valid in "rippled.cfg", "ripple.txt", and the referered [ips_url].
#   List of ips where the Ripple protocol is avialable. Domain names are not
#   allowed. One ipv4 or ipv6 address per line.  A port may optionally be
#   specified after adding a space to the address.  By convention, if known,
#   IPs are listed in from most to least trusted.
#
#   Examples:
#    192.168.0.1
#    192.168.0.1 3939
#    2001:0db8:0100:f101:0210:a4ff:fee3:9566
#
# [sntp_servers]
#    IP address or domain of servers to use for time synchronization.
#    The default time servers are suitable for servers located in the United States
#
# [peer_ip]:
#   IP address or domain to bind to allow external connections from peers.
#   Defaults to not allow external connections from peers.
#
#   Examples: 0.0.0.0 - Bind on all interfaces.
#
# [peer_port]:
#   Port to bind to allow external connections from peers.
#
# [peer_private]:
#   0 or 1.
#   0: allow peers to broadcast your address. [default]
#   1: request peers not broadcast your address.
#
# [rpc_ip]:
#   IP address or domain to bind to allow insecure RPC connections.
#   Defaults to not allow RPC connections.
#
# [rpc_port]:
#   Port to bind to if allowing insecure RPC connections.
#
# [rpc_allow_remote]:
#   0 or 1.
#   0: only allows RPC connections from 127.0.0.1. [default]
#
# [websocket_ip]:
#   IP address or domain to bind to allow client connections.
#
#   Examples: 0.0.0.0 - Bind on all interfaces.
#             127.0.0.1 - Bind on localhost interface.  Only local programs may connect.
#
# [websocket_port]:
#   Port to bind to allow client connections.
#
# [websocket_ssl]:
#   0 or 1.
#   Enable websocket SSL.
#
# [websocket_ssl_key]:
#   Specify the filename holding the SSL key in PEM format.
#
# [websocket_ssl_cert]:
#   Specify the path to the SSL certificate file in PEM format.
#   This is not needed if the chain includes it.
#
# [websocket_ssl_chain]:
#   If you need a certificate chain, specify the path to the certificate chain here.
#   The chain may include the end certificate.
#
# [validation_seed]:
#   To perform validation, this section should contain either a validation seed or key.
#   The validation seed is used to generate the validation public/private key pair.
#   To obtain a validation seed, use the validation_create command.
#
#   Examples:  RASH BUSH MILK LOOK BAD BRIM AVID GAFF BAIT ROT POD LOVE
#              shfArahZT9Q9ckTf3s1psJ7C7qzVN
#
# [node_seed]:
#   To force a particular node seed or key, the key can be set here.
#   The format is the same as the validation_seed field. The need is used for clustering.
#   Node seeds start with an 's'.
#
# [cluster_nodes]:
#   To extend full trust to other nodes, place their node public keys here.
#   Generally, you should only do this for nodes under common administration.
#   Node public keys start with an 'n'.
#
# [ledger_history]:
#   To serve clients, servers need historical ledger data. This sets the number of
#   past ledgers to acquire on server startup and the minimum to maintain while
#   running. Servers that don't need to serve clients can set this to "none".
#   Servers that want complete history can set this to "full".
#   The default is 256 ledgers.
#
# [database_path]:
#   Full path of database directory.
#

[peer_ip]
0.0.0.0

[peer_port]
51235

[rpc_ip]
127.0.0.1

[rpc_port]
5005

[rpc_allow_remote]
0

[websocket_ip]
0.0.0.0

[websocket_port]
5006

[debug_logfile]
log/debug.log

[sntp_servers]
time.windows.com
time.apple.com
time.nist.gov
pool.ntp.org

[ips]
23.21.167.100	51235
23.23.201.55	51235
107.21.116.214	51235
